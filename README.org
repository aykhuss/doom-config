#+TITLE: My Doom Emacs Configuration
#+AUTHOR: Alexander Huss

# should make this a literate configuration at some point

[[https://github.com/doomemacs/doomemacs][Doom Emacs]] is a great configuration framework I ended up settling on after writing emacs configs myself and trying out other frameworks like Spacemacs and co.

To re-generate all configuration and installation files, run the ~org-tangle~ command:
#+begin_src elisp :results silent
(org-babel-tangle)
#+end_src

* Installation

Let's tangle an ~install.sh~ script to get everything set up for us.
#+begin_src shell :noweb yes :tangle install.sh :shebang "#!/usr/bin/env bash"

<<check_emacs>>

<<backup_emacs>>

<<install_doom>>

<<config_doom>>

#+end_src

** Check for emacs
#+begin_src shell :noweb-ref check_emacs
if ! command -v emacs &> /dev/null; then
    echo "could not find an installation of emacs!"
    exit 1
else
    #> should check version?
    :
fi
#+end_src

** Backup any existing emacs configuration
#+begin_src shell :noweb-ref backup_emacs
if [[ -d "$HOME/.emacs.d" ]]; then
    if ! [[ -f $HOME/.emacs.d/bin/doom ]]; then
        #> not a doom installation => backup
        echo "backing up ~/.emacs.d to ~/.emacs.d.bak ..."
        mv $HOME/.emacs.d $HOME/.emacs.d.bak
    fi
fi
#+end_src

** Install Doom emacs
#+begin_src shell :noweb-ref install_doom
if ! [[ -f "$HOME/.emacs.d/bin/doom" ]]; then
    git clone https://github.com/hlissner/doom-emacs ~/.emacs.d
    ~/.emacs.d/bin/doom install
    if [[ -d "$HOME/bin" ]]; then
        ln -s $HOME/.emacs.d/bin/doom doom
    else
        echo "no $HOME/bin folder: did not create a symbolic link to 'doom'"
    fi
fi
#+end_src

** Set up doom configuration
#+begin_src shell :noweb-ref config_doom
if [[ -d "$HOME/.doom.d" ]]; then
    echo "found existing doom confiuration at '$HOME/.doom.d'"
    read -r -p "backup & proceed? [y/N] " response
    case "$response" in
        [yY][eE][sS]|[yY])
            mv $HOME/.doom.d $HOME/.doom.d.bak
            # rm -rf $HOME/.doom.d
            ;;
        ,*)
            exit 0
            ;;
    esac
fi

mkdir $HOME/.doom.d
for cfg in config.el custom.el init.el packages.el; do
    ln -s ${cfg} $HOME/.doom.d/${cfg}
done
#+end_src

* Configuration
There is also a literate configuration option within doom emacs, which could be worth exploring in the future.
** init
:PROPERTIES:
:header-args: :tangle test_init.el
:END:
every source block here should be exported to the a ~test_init.el~ file.
Untimately will want to move to tangle all config files from this one.
#+begin_src elisp
(setq user-full-name "Alexander Huss"
      user-mail-address "alexander.huss@cern.ch")
#+end_src

#+begin_src elisp
;; defaults proposed in the manual [https://orgmode.org/manual/Activation.html]
(global-set-key (kbd "C-c l") #'org-store-link)
(global-set-key (kbd "C-c a") #'org-agenda)
(global-set-key (kbd "C-c c") #'org-capture)
#+end_src


** packages
